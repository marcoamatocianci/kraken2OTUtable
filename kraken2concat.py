#!/usr/bin/python3


#Must be used on files generated by kraken2otu.py
#First argument must be the directory containing the per-sample otu tables
#File name must have an underscore separating sample name and other data
#Example:	AB3-210311_S67_Other_info_kraken.report.S_only_taxIDs.tsv

from os import listdir
from sys import argv

#Directory containing files
path = argv[1]

#Chosen levels to concatenate (each will be a single .tsv file)
level = argv[2]

#File list making
files = tuple([f for f in listdir(path) if ".%s_only.tsv" % (level) in f])

#Empty dictionary
dic = {}
samples = []

def read_file_2_dic(f):
	"""Reads one file and adds the filename, taxonomy and read count to dic"""
	
	sample = f.split("_")[0]
	samples.append(sample)
	
	with open(f, "r") as source:
		while(True):
			try:
				line = source.readline().split("\t")
				tax_id, read_count = line[0], line[1]
				
				if tax_id not in dic:
					dic[tax_id] = []
				dic[tax_id].append((sample, read_count))
			except:
				break
	return



def print_out(_dic):
	"""Writes dictionary content to a tab separated file"""

	with open("concatenated_%s_kraken2_table_names.tsv" % (level), "w") as dest:
		#Header
		dest.write("#OTU\t")
		dest.write("\t".join(samples))
		dest.write("\n")

		for id, matrix in _dic.items():
			new_line = id + "\t"

			for column in samples:

				for sub_list in matrix:
					add_count = "0\t"

					if column == sub_list[0]:
						add_count = sub_list[1].rstrip("\n") + "\t"
						break
				new_line += add_count
			dest.write(new_line[:-1] + "\n")
			new_line = ""

if __name__ == "__main__":
	for i in files:
		read_file_2_dic(i)
	print_out(dic)
